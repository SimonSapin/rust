error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:20:18
   |
LL |     foo::<usize>(x_u64);
   |                  ^^^^^ expected `usize`, found `u64`
   |
help: you can convert an `u64` to `usize` and panic if the converted value wouldn't fit
   |
LL |     foo::<usize>(x_u64.try_into().unwrap());
   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:22:18
   |
LL |     foo::<usize>(x_u32);
   |                  ^^^^^ expected `usize`, found `u32`
   |
help: you can convert an `u32` to `usize` and panic if the converted value wouldn't fit
   |
LL |     foo::<usize>(x_u32.try_into().unwrap());
   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:24:18
   |
LL |     foo::<usize>(x_u16);
   |                  ^^^^^ expected `usize`, found `u16`
   |
help: you can convert an `u16` to `usize` and panic if the converted value wouldn't fit
   |
LL |     foo::<usize>(x_u16.try_into().unwrap());
   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:26:18
   |
LL |     foo::<usize>(x_u8);
   |                  ^^^^ expected `usize`, found `u8`
   |
help: you can convert an `u8` to `usize` and panic if the converted value wouldn't fit
   |
LL |     foo::<usize>(x_u8.try_into().unwrap());
   |                  ^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:28:18
   |
LL |     foo::<usize>(x_isize);
   |                  ^^^^^^^ expected `usize`, found `isize`
   |
help: you can convert an `isize` to `usize` and panic if the converted value wouldn't fit
   |
LL |     foo::<usize>(x_isize.try_into().unwrap());
   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:30:18
   |
LL |     foo::<usize>(x_i64);
   |                  ^^^^^ expected `usize`, found `i64`
   |
help: you can convert an `i64` to `usize` and panic if the converted value wouldn't fit
   |
LL |     foo::<usize>(x_i64.try_into().unwrap());
   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:32:18
   |
LL |     foo::<usize>(x_i32);
   |                  ^^^^^ expected `usize`, found `i32`
   |
help: you can convert an `i32` to `usize` and panic if the converted value wouldn't fit
   |
LL |     foo::<usize>(x_i32.try_into().unwrap());
   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:34:18
   |
LL |     foo::<usize>(x_i16);
   |                  ^^^^^ expected `usize`, found `i16`
   |
help: you can convert an `i16` to `usize` and panic if the converted value wouldn't fit
   |
LL |     foo::<usize>(x_i16.try_into().unwrap());
   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:36:18
   |
LL |     foo::<usize>(x_i8);
   |                  ^^^^ expected `usize`, found `i8`
   |
help: you can convert an `i8` to `usize` and panic if the converted value wouldn't fit
   |
LL |     foo::<usize>(x_i8.try_into().unwrap());
   |                  ^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:41:18
   |
LL |     foo::<isize>(x_usize);
   |                  ^^^^^^^ expected `isize`, found `usize`
   |
help: you can convert an `usize` to `isize` and panic if the converted value wouldn't fit
   |
LL |     foo::<isize>(x_usize.try_into().unwrap());
   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:43:18
   |
LL |     foo::<isize>(x_u64);
   |                  ^^^^^ expected `isize`, found `u64`
   |
help: you can convert an `u64` to `isize` and panic if the converted value wouldn't fit
   |
LL |     foo::<isize>(x_u64.try_into().unwrap());
   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:45:18
   |
LL |     foo::<isize>(x_u32);
   |                  ^^^^^ expected `isize`, found `u32`
   |
help: you can convert an `u32` to `isize` and panic if the converted value wouldn't fit
   |
LL |     foo::<isize>(x_u32.try_into().unwrap());
   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:47:18
   |
LL |     foo::<isize>(x_u16);
   |                  ^^^^^ expected `isize`, found `u16`
   |
help: you can convert an `u16` to `isize` and panic if the converted value wouldn't fit
   |
LL |     foo::<isize>(x_u16.try_into().unwrap());
   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:49:18
   |
LL |     foo::<isize>(x_u8);
   |                  ^^^^ expected `isize`, found `u8`
   |
help: you can convert an `u8` to `isize` and panic if the converted value wouldn't fit
   |
LL |     foo::<isize>(x_u8.try_into().unwrap());
   |                  ^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:52:18
   |
LL |     foo::<isize>(x_i64);
   |                  ^^^^^ expected `isize`, found `i64`
   |
help: you can convert an `i64` to `isize` and panic if the converted value wouldn't fit
   |
LL |     foo::<isize>(x_i64.try_into().unwrap());
   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:54:18
   |
LL |     foo::<isize>(x_i32);
   |                  ^^^^^ expected `isize`, found `i32`
   |
help: you can convert an `i32` to `isize` and panic if the converted value wouldn't fit
   |
LL |     foo::<isize>(x_i32.try_into().unwrap());
   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:56:18
   |
LL |     foo::<isize>(x_i16);
   |                  ^^^^^ expected `isize`, found `i16`
   |
help: you can convert an `i16` to `isize` and panic if the converted value wouldn't fit
   |
LL |     foo::<isize>(x_i16.try_into().unwrap());
   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:58:18
   |
LL |     foo::<isize>(x_i8);
   |                  ^^^^ expected `isize`, found `i8`
   |
help: you can convert an `i8` to `isize` and panic if the converted value wouldn't fit
   |
LL |     foo::<isize>(x_i8.try_into().unwrap());
   |                  ^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:63:16
   |
LL |     foo::<u64>(x_usize);
   |                ^^^^^^^ expected `u64`, found `usize`
   |
help: you can convert an `usize` to `u64` and panic if the converted value wouldn't fit
   |
LL |     foo::<u64>(x_usize.try_into().unwrap());
   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:66:16
   |
LL |     foo::<u64>(x_u32);
   |                ^^^^^
   |                |
   |                expected `u64`, found `u32`
   |                help: you can convert an `u32` to `u64`: `x_u32.into()`

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:68:16
   |
LL |     foo::<u64>(x_u16);
   |                ^^^^^
   |                |
   |                expected `u64`, found `u16`
   |                help: you can convert an `u16` to `u64`: `x_u16.into()`

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:70:16
   |
LL |     foo::<u64>(x_u8);
   |                ^^^^
   |                |
   |                expected `u64`, found `u8`
   |                help: you can convert an `u8` to `u64`: `x_u8.into()`

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:72:16
   |
LL |     foo::<u64>(x_isize);
   |                ^^^^^^^ expected `u64`, found `isize`
   |
help: you can convert an `isize` to `u64` and panic if the converted value wouldn't fit
   |
LL |     foo::<u64>(x_isize.try_into().unwrap());
   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:74:16
   |
LL |     foo::<u64>(x_i64);
   |                ^^^^^ expected `u64`, found `i64`
   |
help: you can convert an `i64` to `u64` and panic if the converted value wouldn't fit
   |
LL |     foo::<u64>(x_i64.try_into().unwrap());
   |                ^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:76:16
   |
LL |     foo::<u64>(x_i32);
   |                ^^^^^ expected `u64`, found `i32`
   |
help: you can convert an `i32` to `u64` and panic if the converted value wouldn't fit
   |
LL |     foo::<u64>(x_i32.try_into().unwrap());
   |                ^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:78:16
   |
LL |     foo::<u64>(x_i16);
   |                ^^^^^ expected `u64`, found `i16`
   |
help: you can convert an `i16` to `u64` and panic if the converted value wouldn't fit
   |
LL |     foo::<u64>(x_i16.try_into().unwrap());
   |                ^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:80:16
   |
LL |     foo::<u64>(x_i8);
   |                ^^^^ expected `u64`, found `i8`
   |
help: you can convert an `i8` to `u64` and panic if the converted value wouldn't fit
   |
LL |     foo::<u64>(x_i8.try_into().unwrap());
   |                ^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:85:16
   |
LL |     foo::<i64>(x_usize);
   |                ^^^^^^^ expected `i64`, found `usize`
   |
help: you can convert an `usize` to `i64` and panic if the converted value wouldn't fit
   |
LL |     foo::<i64>(x_usize.try_into().unwrap());
   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:87:16
   |
LL |     foo::<i64>(x_u64);
   |                ^^^^^ expected `i64`, found `u64`
   |
help: you can convert an `u64` to `i64` and panic if the converted value wouldn't fit
   |
LL |     foo::<i64>(x_u64.try_into().unwrap());
   |                ^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:89:16
   |
LL |     foo::<i64>(x_u32);
   |                ^^^^^ expected `i64`, found `u32`
   |
help: you can convert an `u32` to `i64` and panic if the converted value wouldn't fit
   |
LL |     foo::<i64>(x_u32.try_into().unwrap());
   |                ^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:91:16
   |
LL |     foo::<i64>(x_u16);
   |                ^^^^^ expected `i64`, found `u16`
   |
help: you can convert an `u16` to `i64` and panic if the converted value wouldn't fit
   |
LL |     foo::<i64>(x_u16.try_into().unwrap());
   |                ^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:93:16
   |
LL |     foo::<i64>(x_u8);
   |                ^^^^ expected `i64`, found `u8`
   |
help: you can convert an `u8` to `i64` and panic if the converted value wouldn't fit
   |
LL |     foo::<i64>(x_u8.try_into().unwrap());
   |                ^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:95:16
   |
LL |     foo::<i64>(x_isize);
   |                ^^^^^^^ expected `i64`, found `isize`
   |
help: you can convert an `isize` to `i64` and panic if the converted value wouldn't fit
   |
LL |     foo::<i64>(x_isize.try_into().unwrap());
   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:98:16
   |
LL |     foo::<i64>(x_i32);
   |                ^^^^^
   |                |
   |                expected `i64`, found `i32`
   |                help: you can convert an `i32` to `i64`: `x_i32.into()`

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:100:16
   |
LL |     foo::<i64>(x_i16);
   |                ^^^^^
   |                |
   |                expected `i64`, found `i16`
   |                help: you can convert an `i16` to `i64`: `x_i16.into()`

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:102:16
   |
LL |     foo::<i64>(x_i8);
   |                ^^^^
   |                |
   |                expected `i64`, found `i8`
   |                help: you can convert an `i8` to `i64`: `x_i8.into()`

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:107:16
   |
LL |     foo::<u32>(x_usize);
   |                ^^^^^^^ expected `u32`, found `usize`
   |
help: you can convert an `usize` to `u32` and panic if the converted value wouldn't fit
   |
LL |     foo::<u32>(x_usize.try_into().unwrap());
   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:109:16
   |
LL |     foo::<u32>(x_u64);
   |                ^^^^^ expected `u32`, found `u64`
   |
help: you can convert an `u64` to `u32` and panic if the converted value wouldn't fit
   |
LL |     foo::<u32>(x_u64.try_into().unwrap());
   |                ^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:112:16
   |
LL |     foo::<u32>(x_u16);
   |                ^^^^^
   |                |
   |                expected `u32`, found `u16`
   |                help: you can convert an `u16` to `u32`: `x_u16.into()`

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:114:16
   |
LL |     foo::<u32>(x_u8);
   |                ^^^^
   |                |
   |                expected `u32`, found `u8`
   |                help: you can convert an `u8` to `u32`: `x_u8.into()`

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:116:16
   |
LL |     foo::<u32>(x_isize);
   |                ^^^^^^^ expected `u32`, found `isize`
   |
help: you can convert an `isize` to `u32` and panic if the converted value wouldn't fit
   |
LL |     foo::<u32>(x_isize.try_into().unwrap());
   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:118:16
   |
LL |     foo::<u32>(x_i64);
   |                ^^^^^ expected `u32`, found `i64`
   |
help: you can convert an `i64` to `u32` and panic if the converted value wouldn't fit
   |
LL |     foo::<u32>(x_i64.try_into().unwrap());
   |                ^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:120:16
   |
LL |     foo::<u32>(x_i32);
   |                ^^^^^ expected `u32`, found `i32`
   |
help: you can convert an `i32` to `u32` and panic if the converted value wouldn't fit
   |
LL |     foo::<u32>(x_i32.try_into().unwrap());
   |                ^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:122:16
   |
LL |     foo::<u32>(x_i16);
   |                ^^^^^ expected `u32`, found `i16`
   |
help: you can convert an `i16` to `u32` and panic if the converted value wouldn't fit
   |
LL |     foo::<u32>(x_i16.try_into().unwrap());
   |                ^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:124:16
   |
LL |     foo::<u32>(x_i8);
   |                ^^^^ expected `u32`, found `i8`
   |
help: you can convert an `i8` to `u32` and panic if the converted value wouldn't fit
   |
LL |     foo::<u32>(x_i8.try_into().unwrap());
   |                ^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:129:16
   |
LL |     foo::<i32>(x_usize);
   |                ^^^^^^^ expected `i32`, found `usize`
   |
help: you can convert an `usize` to `i32` and panic if the converted value wouldn't fit
   |
LL |     foo::<i32>(x_usize.try_into().unwrap());
   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:131:16
   |
LL |     foo::<i32>(x_u64);
   |                ^^^^^ expected `i32`, found `u64`
   |
help: you can convert an `u64` to `i32` and panic if the converted value wouldn't fit
   |
LL |     foo::<i32>(x_u64.try_into().unwrap());
   |                ^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:133:16
   |
LL |     foo::<i32>(x_u32);
   |                ^^^^^ expected `i32`, found `u32`
   |
help: you can convert an `u32` to `i32` and panic if the converted value wouldn't fit
   |
LL |     foo::<i32>(x_u32.try_into().unwrap());
   |                ^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:135:16
   |
LL |     foo::<i32>(x_u16);
   |                ^^^^^ expected `i32`, found `u16`
   |
help: you can convert an `u16` to `i32` and panic if the converted value wouldn't fit
   |
LL |     foo::<i32>(x_u16.try_into().unwrap());
   |                ^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:137:16
   |
LL |     foo::<i32>(x_u8);
   |                ^^^^ expected `i32`, found `u8`
   |
help: you can convert an `u8` to `i32` and panic if the converted value wouldn't fit
   |
LL |     foo::<i32>(x_u8.try_into().unwrap());
   |                ^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:139:16
   |
LL |     foo::<i32>(x_isize);
   |                ^^^^^^^ expected `i32`, found `isize`
   |
help: you can convert an `isize` to `i32` and panic if the converted value wouldn't fit
   |
LL |     foo::<i32>(x_isize.try_into().unwrap());
   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:141:16
   |
LL |     foo::<i32>(x_i64);
   |                ^^^^^ expected `i32`, found `i64`
   |
help: you can convert an `i64` to `i32` and panic if the converted value wouldn't fit
   |
LL |     foo::<i32>(x_i64.try_into().unwrap());
   |                ^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:144:16
   |
LL |     foo::<i32>(x_i16);
   |                ^^^^^
   |                |
   |                expected `i32`, found `i16`
   |                help: you can convert an `i16` to `i32`: `x_i16.into()`

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:146:16
   |
LL |     foo::<i32>(x_i8);
   |                ^^^^
   |                |
   |                expected `i32`, found `i8`
   |                help: you can convert an `i8` to `i32`: `x_i8.into()`

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:151:16
   |
LL |     foo::<u16>(x_usize);
   |                ^^^^^^^ expected `u16`, found `usize`
   |
help: you can convert an `usize` to `u16` and panic if the converted value wouldn't fit
   |
LL |     foo::<u16>(x_usize.try_into().unwrap());
   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:153:16
   |
LL |     foo::<u16>(x_u64);
   |                ^^^^^ expected `u16`, found `u64`
   |
help: you can convert an `u64` to `u16` and panic if the converted value wouldn't fit
   |
LL |     foo::<u16>(x_u64.try_into().unwrap());
   |                ^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:155:16
   |
LL |     foo::<u16>(x_u32);
   |                ^^^^^ expected `u16`, found `u32`
   |
help: you can convert an `u32` to `u16` and panic if the converted value wouldn't fit
   |
LL |     foo::<u16>(x_u32.try_into().unwrap());
   |                ^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:158:16
   |
LL |     foo::<u16>(x_u8);
   |                ^^^^
   |                |
   |                expected `u16`, found `u8`
   |                help: you can convert an `u8` to `u16`: `x_u8.into()`

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:160:16
   |
LL |     foo::<u16>(x_isize);
   |                ^^^^^^^ expected `u16`, found `isize`
   |
help: you can convert an `isize` to `u16` and panic if the converted value wouldn't fit
   |
LL |     foo::<u16>(x_isize.try_into().unwrap());
   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:162:16
   |
LL |     foo::<u16>(x_i64);
   |                ^^^^^ expected `u16`, found `i64`
   |
help: you can convert an `i64` to `u16` and panic if the converted value wouldn't fit
   |
LL |     foo::<u16>(x_i64.try_into().unwrap());
   |                ^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:164:16
   |
LL |     foo::<u16>(x_i32);
   |                ^^^^^ expected `u16`, found `i32`
   |
help: you can convert an `i32` to `u16` and panic if the converted value wouldn't fit
   |
LL |     foo::<u16>(x_i32.try_into().unwrap());
   |                ^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:166:16
   |
LL |     foo::<u16>(x_i16);
   |                ^^^^^ expected `u16`, found `i16`
   |
help: you can convert an `i16` to `u16` and panic if the converted value wouldn't fit
   |
LL |     foo::<u16>(x_i16.try_into().unwrap());
   |                ^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:168:16
   |
LL |     foo::<u16>(x_i8);
   |                ^^^^ expected `u16`, found `i8`
   |
help: you can convert an `i8` to `u16` and panic if the converted value wouldn't fit
   |
LL |     foo::<u16>(x_i8.try_into().unwrap());
   |                ^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:173:16
   |
LL |     foo::<i16>(x_usize);
   |                ^^^^^^^ expected `i16`, found `usize`
   |
help: you can convert an `usize` to `i16` and panic if the converted value wouldn't fit
   |
LL |     foo::<i16>(x_usize.try_into().unwrap());
   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:175:16
   |
LL |     foo::<i16>(x_u64);
   |                ^^^^^ expected `i16`, found `u64`
   |
help: you can convert an `u64` to `i16` and panic if the converted value wouldn't fit
   |
LL |     foo::<i16>(x_u64.try_into().unwrap());
   |                ^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:177:16
   |
LL |     foo::<i16>(x_u32);
   |                ^^^^^ expected `i16`, found `u32`
   |
help: you can convert an `u32` to `i16` and panic if the converted value wouldn't fit
   |
LL |     foo::<i16>(x_u32.try_into().unwrap());
   |                ^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:179:16
   |
LL |     foo::<i16>(x_u16);
   |                ^^^^^ expected `i16`, found `u16`
   |
help: you can convert an `u16` to `i16` and panic if the converted value wouldn't fit
   |
LL |     foo::<i16>(x_u16.try_into().unwrap());
   |                ^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:181:16
   |
LL |     foo::<i16>(x_u8);
   |                ^^^^ expected `i16`, found `u8`
   |
help: you can convert an `u8` to `i16` and panic if the converted value wouldn't fit
   |
LL |     foo::<i16>(x_u8.try_into().unwrap());
   |                ^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:183:16
   |
LL |     foo::<i16>(x_isize);
   |                ^^^^^^^ expected `i16`, found `isize`
   |
help: you can convert an `isize` to `i16` and panic if the converted value wouldn't fit
   |
LL |     foo::<i16>(x_isize.try_into().unwrap());
   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:185:16
   |
LL |     foo::<i16>(x_i64);
   |                ^^^^^ expected `i16`, found `i64`
   |
help: you can convert an `i64` to `i16` and panic if the converted value wouldn't fit
   |
LL |     foo::<i16>(x_i64.try_into().unwrap());
   |                ^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:187:16
   |
LL |     foo::<i16>(x_i32);
   |                ^^^^^ expected `i16`, found `i32`
   |
help: you can convert an `i32` to `i16` and panic if the converted value wouldn't fit
   |
LL |     foo::<i16>(x_i32.try_into().unwrap());
   |                ^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:190:16
   |
LL |     foo::<i16>(x_i8);
   |                ^^^^
   |                |
   |                expected `i16`, found `i8`
   |                help: you can convert an `i8` to `i16`: `x_i8.into()`

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:195:15
   |
LL |     foo::<u8>(x_usize);
   |               ^^^^^^^ expected `u8`, found `usize`
   |
help: you can convert an `usize` to `u8` and panic if the converted value wouldn't fit
   |
LL |     foo::<u8>(x_usize.try_into().unwrap());
   |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:197:15
   |
LL |     foo::<u8>(x_u64);
   |               ^^^^^ expected `u8`, found `u64`
   |
help: you can convert an `u64` to `u8` and panic if the converted value wouldn't fit
   |
LL |     foo::<u8>(x_u64.try_into().unwrap());
   |               ^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:199:15
   |
LL |     foo::<u8>(x_u32);
   |               ^^^^^ expected `u8`, found `u32`
   |
help: you can convert an `u32` to `u8` and panic if the converted value wouldn't fit
   |
LL |     foo::<u8>(x_u32.try_into().unwrap());
   |               ^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:201:15
   |
LL |     foo::<u8>(x_u16);
   |               ^^^^^ expected `u8`, found `u16`
   |
help: you can convert an `u16` to `u8` and panic if the converted value wouldn't fit
   |
LL |     foo::<u8>(x_u16.try_into().unwrap());
   |               ^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:204:15
   |
LL |     foo::<u8>(x_isize);
   |               ^^^^^^^ expected `u8`, found `isize`
   |
help: you can convert an `isize` to `u8` and panic if the converted value wouldn't fit
   |
LL |     foo::<u8>(x_isize.try_into().unwrap());
   |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:206:15
   |
LL |     foo::<u8>(x_i64);
   |               ^^^^^ expected `u8`, found `i64`
   |
help: you can convert an `i64` to `u8` and panic if the converted value wouldn't fit
   |
LL |     foo::<u8>(x_i64.try_into().unwrap());
   |               ^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:208:15
   |
LL |     foo::<u8>(x_i32);
   |               ^^^^^ expected `u8`, found `i32`
   |
help: you can convert an `i32` to `u8` and panic if the converted value wouldn't fit
   |
LL |     foo::<u8>(x_i32.try_into().unwrap());
   |               ^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:210:15
   |
LL |     foo::<u8>(x_i16);
   |               ^^^^^ expected `u8`, found `i16`
   |
help: you can convert an `i16` to `u8` and panic if the converted value wouldn't fit
   |
LL |     foo::<u8>(x_i16.try_into().unwrap());
   |               ^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:212:15
   |
LL |     foo::<u8>(x_i8);
   |               ^^^^ expected `u8`, found `i8`
   |
help: you can convert an `i8` to `u8` and panic if the converted value wouldn't fit
   |
LL |     foo::<u8>(x_i8.try_into().unwrap());
   |               ^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:217:15
   |
LL |     foo::<i8>(x_usize);
   |               ^^^^^^^ expected `i8`, found `usize`
   |
help: you can convert an `usize` to `i8` and panic if the converted value wouldn't fit
   |
LL |     foo::<i8>(x_usize.try_into().unwrap());
   |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:219:15
   |
LL |     foo::<i8>(x_u64);
   |               ^^^^^ expected `i8`, found `u64`
   |
help: you can convert an `u64` to `i8` and panic if the converted value wouldn't fit
   |
LL |     foo::<i8>(x_u64.try_into().unwrap());
   |               ^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:221:15
   |
LL |     foo::<i8>(x_u32);
   |               ^^^^^ expected `i8`, found `u32`
   |
help: you can convert an `u32` to `i8` and panic if the converted value wouldn't fit
   |
LL |     foo::<i8>(x_u32.try_into().unwrap());
   |               ^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:223:15
   |
LL |     foo::<i8>(x_u16);
   |               ^^^^^ expected `i8`, found `u16`
   |
help: you can convert an `u16` to `i8` and panic if the converted value wouldn't fit
   |
LL |     foo::<i8>(x_u16.try_into().unwrap());
   |               ^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:225:15
   |
LL |     foo::<i8>(x_u8);
   |               ^^^^ expected `i8`, found `u8`
   |
help: you can convert an `u8` to `i8` and panic if the converted value wouldn't fit
   |
LL |     foo::<i8>(x_u8.try_into().unwrap());
   |               ^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:227:15
   |
LL |     foo::<i8>(x_isize);
   |               ^^^^^^^ expected `i8`, found `isize`
   |
help: you can convert an `isize` to `i8` and panic if the converted value wouldn't fit
   |
LL |     foo::<i8>(x_isize.try_into().unwrap());
   |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:229:15
   |
LL |     foo::<i8>(x_i64);
   |               ^^^^^ expected `i8`, found `i64`
   |
help: you can convert an `i64` to `i8` and panic if the converted value wouldn't fit
   |
LL |     foo::<i8>(x_i64.try_into().unwrap());
   |               ^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:231:15
   |
LL |     foo::<i8>(x_i32);
   |               ^^^^^ expected `i8`, found `i32`
   |
help: you can convert an `i32` to `i8` and panic if the converted value wouldn't fit
   |
LL |     foo::<i8>(x_i32.try_into().unwrap());
   |               ^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:233:15
   |
LL |     foo::<i8>(x_i16);
   |               ^^^^^ expected `i8`, found `i16`
   |
help: you can convert an `i16` to `i8` and panic if the converted value wouldn't fit
   |
LL |     foo::<i8>(x_i16.try_into().unwrap());
   |               ^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:239:16
   |
LL |     foo::<f64>(x_usize);
   |                ^^^^^^^ expected `f64`, found `usize`
   |
help: you can cast an `usize to `f64`, producing the floating point representation of the integer,
   |                                              rounded if necessary
LL |     foo::<f64>(x_usize as f64);
   |                ^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:241:16
   |
LL |     foo::<f64>(x_u64);
   |                ^^^^^ expected `f64`, found `u64`
   |
help: you can cast an `u64 to `f64`, producing the floating point representation of the integer,
   |                                              rounded if necessary
LL |     foo::<f64>(x_u64 as f64);
   |                ^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:243:16
   |
LL |     foo::<f64>(x_u32);
   |                ^^^^^ expected `f64`, found `u32`
   |
help: you can convert an `u32` to `f64`, producing the floating point representation of the integer
   |
LL |     foo::<f64>(x_u32.into());
   |                ^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:245:16
   |
LL |     foo::<f64>(x_u16);
   |                ^^^^^ expected `f64`, found `u16`
   |
help: you can convert an `u16` to `f64`, producing the floating point representation of the integer
   |
LL |     foo::<f64>(x_u16.into());
   |                ^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:247:16
   |
LL |     foo::<f64>(x_u8);
   |                ^^^^ expected `f64`, found `u8`
   |
help: you can convert an `u8` to `f64`, producing the floating point representation of the integer
   |
LL |     foo::<f64>(x_u8.into());
   |                ^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:249:16
   |
LL |     foo::<f64>(x_isize);
   |                ^^^^^^^ expected `f64`, found `isize`
   |
help: you can convert an `isize` to `f64`, producing the floating point representation of the integer, rounded if necessary
   |
LL |     foo::<f64>(x_isize as f64);
   |                ^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:251:16
   |
LL |     foo::<f64>(x_i64);
   |                ^^^^^ expected `f64`, found `i64`
   |
help: you can convert an `i64` to `f64`, producing the floating point representation of the integer, rounded if necessary
   |
LL |     foo::<f64>(x_i64 as f64);
   |                ^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:253:16
   |
LL |     foo::<f64>(x_i32);
   |                ^^^^^ expected `f64`, found `i32`
   |
help: you can convert an `i32` to `f64`, producing the floating point representation of the integer
   |
LL |     foo::<f64>(x_i32.into());
   |                ^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:255:16
   |
LL |     foo::<f64>(x_i16);
   |                ^^^^^ expected `f64`, found `i16`
   |
help: you can convert an `i16` to `f64`, producing the floating point representation of the integer
   |
LL |     foo::<f64>(x_i16.into());
   |                ^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:257:16
   |
LL |     foo::<f64>(x_i8);
   |                ^^^^ expected `f64`, found `i8`
   |
help: you can convert an `i8` to `f64`, producing the floating point representation of the integer
   |
LL |     foo::<f64>(x_i8.into());
   |                ^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:260:16
   |
LL |     foo::<f64>(x_f32);
   |                ^^^^^
   |                |
   |                expected `f64`, found `f32`
   |                help: you can convert an `f32` to `f64`: `x_f32.into()`

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:263:16
   |
LL |     foo::<f32>(x_usize);
   |                ^^^^^^^ expected `f32`, found `usize`
   |
help: you can cast an `usize to `f32`, producing the floating point representation of the integer,
   |                                              rounded if necessary
LL |     foo::<f32>(x_usize as f32);
   |                ^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:265:16
   |
LL |     foo::<f32>(x_u64);
   |                ^^^^^ expected `f32`, found `u64`
   |
help: you can cast an `u64 to `f32`, producing the floating point representation of the integer,
   |                                              rounded if necessary
LL |     foo::<f32>(x_u64 as f32);
   |                ^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:267:16
   |
LL |     foo::<f32>(x_u32);
   |                ^^^^^ expected `f32`, found `u32`
   |
help: you can cast an `u32 to `f32`, producing the floating point representation of the integer,
   |                                              rounded if necessary
LL |     foo::<f32>(x_u32 as f32);
   |                ^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:269:16
   |
LL |     foo::<f32>(x_u16);
   |                ^^^^^ expected `f32`, found `u16`
   |
help: you can convert an `u16` to `f32`, producing the floating point representation of the integer
   |
LL |     foo::<f32>(x_u16.into());
   |                ^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:271:16
   |
LL |     foo::<f32>(x_u8);
   |                ^^^^ expected `f32`, found `u8`
   |
help: you can convert an `u8` to `f32`, producing the floating point representation of the integer
   |
LL |     foo::<f32>(x_u8.into());
   |                ^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:273:16
   |
LL |     foo::<f32>(x_isize);
   |                ^^^^^^^ expected `f32`, found `isize`
   |
help: you can convert an `isize` to `f32`, producing the floating point representation of the integer, rounded if necessary
   |
LL |     foo::<f32>(x_isize as f32);
   |                ^^^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:275:16
   |
LL |     foo::<f32>(x_i64);
   |                ^^^^^ expected `f32`, found `i64`
   |
help: you can convert an `i64` to `f32`, producing the floating point representation of the integer, rounded if necessary
   |
LL |     foo::<f32>(x_i64 as f32);
   |                ^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:277:16
   |
LL |     foo::<f32>(x_i32);
   |                ^^^^^ expected `f32`, found `i32`
   |
help: you can convert an `i32` to `f32`, producing the floating point representation of the integer, rounded if necessary
   |
LL |     foo::<f32>(x_i32 as f32);
   |                ^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:279:16
   |
LL |     foo::<f32>(x_i16);
   |                ^^^^^ expected `f32`, found `i16`
   |
help: you can convert an `i16` to `f32`, producing the floating point representation of the integer
   |
LL |     foo::<f32>(x_i16.into());
   |                ^^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:281:16
   |
LL |     foo::<f32>(x_i8);
   |                ^^^^ expected `f32`, found `i8`
   |
help: you can convert an `i8` to `f32`, producing the floating point representation of the integer
   |
LL |     foo::<f32>(x_i8.into());
   |                ^^^^^^^^^^^

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:286:16
   |
LL |     foo::<u32>(x_u8 as u16);
   |                ^^^^^^^^^^^
   |                |
   |                expected `u32`, found `u16`
   |                help: you can convert an `u16` to `u32`: `(x_u8 as u16).into()`

error[E0308]: mismatched types
  --> $DIR/numeric-cast.rs:288:16
   |
LL |     foo::<i32>(-x_i8);
   |                ^^^^^
   |                |
   |                expected `i32`, found `i8`
   |                help: you can convert an `i8` to `i32`: `(-x_i8).into()`

error: aborting due to 113 previous errors

For more information about this error, try `rustc --explain E0308`.
